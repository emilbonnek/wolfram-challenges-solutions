(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     50160,       1068]
NotebookOptionsPosition[     31523,        719]
NotebookOutlinePosition[     46828,       1014]
CellTagsIndexPosition[     46757,       1009]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Almost Palindromes", "Title"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 37}}],

Cell["", "WCIntroDividerLine"],

Cell["\<\
Write a function that finds words that would be palindromes if one of their \
letters was removed.\
\>", "Description"],

Cell[CellGroupData[{

Cell["More Details", "Section"],

Cell["\<\
A palindrome is a word, like \"racecar,\" that is spelled the same backwards \
as it is forwards. The word \"engage\" is not a palindrome, but if we remove \
the letter \"n\" then the remaining string of letters - \"egage\" - uses the \
same sequence of characters whether it is read from left to right or right to \
left. We might say that \"engage\" is an \"almost palindrome.\"\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["AlmostPalindrome", "InlineCode"],
 " that takes a positive integer ",
 StyleBox["n", "InlineCode"],
 " and returns a list of all words in ",
 StyleBox["DictionaryLookup[]", "InlineCode"],
 " of length ",
 StyleBox["n", "InlineCode"],
 " that are ",
 StyleBox["not ",
  FontSlant->"Italic"],
 "palindromes but would be palindromes if exactly one letter was removed. The \
list of words that your function outputs should be arranged in alphabetical \
order."
}], "Text",ExpressionUUID->"18eb50fc-2a57-4488-a54f-eb76588021b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AlmostPalindrome",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "5", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellChangeTimes->{{3.813061247175316*^9, 3.8130612536358395`*^9}},
 FontSize->14,
 CellLabel->"In[1]:=",ExpressionUUID->"3f459b9d-6d9f-412b-be52-4c043d9e82e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"allay\"\>", ",", "\<\"annal\"\>", ",", "\<\"arras\"\>", 
   ",", "\<\"array\"\>", ",", "\<\"assay\"\>", ",", "\<\"attar\"\>", 
   ",", "\<\"belle\"\>", ",", "\<\"Bette\"\>", ",", "\<\"boffo\"\>", 
   ",", "\<\"boobs\"\>", ",", "\<\"booby\"\>", ",", "\<\"calla\"\>", 
   ",", "\<\"cirri\"\>", ",", "\<\"deeds\"\>", ",", "\<\"ebbed\"\>", 
   ",", "\<\"effed\"\>", ",", "\<\"egged\"\>", ",", "\<\"erred\"\>", 
   ",", "\<\"freer\"\>", ",", "\<\"gamma\"\>", ",", "\<\"Greer\"\>", 
   ",", "\<\"Hakka\"\>", ",", "\<\"Hanna\"\>", ",", "\<\"Hesse\"\>", 
   ",", "\<\"hooch\"\>", ",", "\<\"innit\"\>", ",", "\<\"Janna\"\>", 
   ",", "\<\"Jesse\"\>", ",", "\<\"kappa\"\>", ",", "\<\"kooks\"\>", 
   ",", "\<\"kooky\"\>", ",", "\<\"Lassa\"\>", ",", "\<\"lemme\"\>", 
   ",", "\<\"Lippi\"\>", ",", "\<\"lotto\"\>", ",", "\<\"manna\"\>", 
   ",", "\<\"motto\"\>", ",", "\<\"Nikki\"\>", ",", "\<\"noons\"\>", 
   ",", "\<\"peeps\"\>", ",", "\<\"poops\"\>", ",", "\<\"ragga\"\>", 
   ",", "\<\"recce\"\>", ",", "\<\"Rocco\"\>", ",", "\<\"Rollo\"\>", 
   ",", "\<\"seeds\"\>", ",", "\<\"seeks\"\>", ",", "\<\"seems\"\>", 
   ",", "\<\"seeps\"\>", ",", "\<\"seers\"\>", ",", "\<\"sells\"\>", 
   ",", "\<\"setts\"\>", ",", "\<\"shoos\"\>", ",", "\<\"sills\"\>", 
   ",", "\<\"teeth\"\>", ",", "\<\"tooth\"\>", ",", "\<\"toots\"\>", 
   ",", "\<\"tweet\"\>", ",", "\<\"villi\"\>", ",", "\<\"walla\"\>", 
   ",", "\<\"wanna\"\>", ",", "\<\"yobbo\"\>", ",", "\<\"yukky\"\>", 
   ",", "\<\"yummy\"\>", ",", "\<\"Zappa\"\>", ",", "\<\"Zorro\"\>"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AlmostPalindrome",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "3", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aah\"\>", ",", "\<\"add\"\>", ",", "\<\"all\"\>", 
   ",", "\<\"Ann\"\>", ",", "\<\"ass\"\>", ",", "\<\"baa\"\>", 
   ",", "\<\"BBC\"\>", ",", "\<\"bee\"\>", ",", "\<\"boo\"\>", 
   ",", "\<\"brr\"\>", ",", "\<\"CNN\"\>", ",", "\<\"coo\"\>", 
   ",", "\<\"DDT\"\>", ",", "\<\"Dee\"\>", ",", "\<\"ebb\"\>", 
   ",", "\<\"eek\"\>", ",", "\<\"eel\"\>", ",", "\<\"eff\"\>", 
   ",", "\<\"egg\"\>", ",", "\<\"ell\"\>", ",", "\<\"err\"\>", 
   ",", "\<\"fee\"\>", ",", "\<\"gee\"\>", ",", "\<\"goo\"\>", 
   ",", "\<\"ill\"\>", ",", "\<\"inn\"\>", ",", "\<\"lee\"\>", 
   ",", "\<\"Lee\"\>", ",", "\<\"LLB\"\>", ",", "\<\"loo\"\>", 
   ",", "\<\"moo\"\>", ",", "\<\"nee\"\>", ",", "\<\"odd\"\>", 
   ",", "\<\"off\"\>", ",", "\<\"ooh\"\>", ",", "\<\"Orr\"\>", 
   ",", "\<\"pee\"\>", ",", "\<\"ppm\"\>", ",", "\<\"see\"\>", 
   ",", "\<\"shh\"\>", ",", "\<\"ssh\"\>", ",", "\<\"tee\"\>", 
   ",", "\<\"too\"\>", ",", "\<\"wee\"\>", ",", "\<\"woo\"\>", 
   ",", "\<\"XXL\"\>", ",", "\<\"zoo\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AlmostPalindrome",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "4", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"afar\"\>", ",", "\<\"agar\"\>", ",", "\<\"agog\"\>", 
   ",", "\<\"ahas\"\>", ",", "\<\"ajar\"\>", ",", "\<\"alas\"\>", 
   ",", "\<\"alga\"\>", ",", "\<\"anal\"\>", ",", "\<\"anon\"\>", 
   ",", "\<\"aqua\"\>", ",", "\<\"area\"\>", ",", "\<\"aria\"\>", 
   ",", "\<\"asap\"\>", ",", "\<\"asks\"\>", ",", "\<\"asps\"\>", 
   ",", "\<\"aura\"\>", ",", "\<\"away\"\>", ",", "\<\"ayah\"\>", 
   ",", "\<\"babe\"\>", ",", "\<\"baby\"\>", ",", "\<\"barb\"\>", 
   ",", "\<\"Bede\"\>", ",", "\<\"bibs\"\>", ",", "\<\"blab\"\>", 
   ",", "\<\"blob\"\>", ",", "\<\"bobs\"\>", ",", "\<\"bomb\"\>", 
   ",", "\<\"bozo\"\>", ",", "\<\"bubo\"\>", ",", "\<\"bubs\"\>", 
   ",", "\<\"bulb\"\>", ",", "\<\"Cara\"\>", ",", "\<\"ceca\"\>", 
   ",", "\<\"cede\"\>", ",", "\<\"chic\"\>", ",", "\<\"choc\"\>", 
   ",", "\<\"coca\"\>", ",", "\<\"cock\"\>", ",", "\<\"coco\"\>", 
   ",", "\<\"coho\"\>", ",", "\<\"Colo\"\>", ",", "\<\"Como\"\>", 
   ",", "\<\"Dada\"\>", ",", "\<\"dado\"\>", ",", "\<\"dads\"\>", 
   ",", "\<\"Dana\"\>", ",", "\<\"data\"\>", ",", "\<\"dead\"\>", 
   ",", "\<\"Dene\"\>", ",", "\<\"dido\"\>", ",", "\<\"died\"\>", 
   ",", "\<\"dodo\"\>", ",", "\<\"dude\"\>", ",", "\<\"duds\"\>", 
   ",", "\<\"DVDs\"\>", ",", "\<\"dyad\"\>", ",", "\<\"dyed\"\>", 
   ",", "\<\"ease\"\>", ",", "\<\"eave\"\>", ",", "\<\"edge\"\>", 
   ",", "\<\"e'en\"\>", ",", "\<\"e'er\"\>", ",", "\<\"eked\"\>", 
   ",", "\<\"ekes\"\>", ",", "\<\"else\"\>", ",", "\<\"Elul\"\>", 
   ",", "\<\"epee\"\>", ",", "\<\"\[EAcute]p\[EAcute]e\"\>", 
   ",", "\<\"even\"\>", ",", "\<\"ever\"\>", ",", "\<\"eves\"\>", 
   ",", "\<\"ewer\"\>", ",", "\<\"ewes\"\>", ",", "\<\"exec\"\>", 
   ",", "\<\"exes\"\>", ",", "\<\"eyed\"\>", ",", "\<\"eyes\"\>", 
   ",", "\<\"faff\"\>", ",", "\<\"fete\"\>", ",", "\<\"fief\"\>", 
   ",", "\<\"fife\"\>", ",", "\<\"Fiji\"\>", ",", "\<\"Gaea\"\>", 
   ",", "\<\"gaga\"\>", ",", "\<\"gage\"\>", ",", "\<\"gags\"\>", 
   ",", "\<\"gala\"\>", ",", "\<\"Gama\"\>", ",", "\<\"gang\"\>", 
   ",", "\<\"Gaza\"\>", ",", "\<\"gene\"\>", ",", "\<\"Gene\"\>", 
   ",", "\<\"gigs\"\>", ",", "\<\"gong\"\>", ",", "\<\"grog\"\>", 
   ",", "\<\"guru\"\>", ",", "\<\"hash\"\>", ",", "\<\"hath\"\>", 
   ",", "\<\"Hebe\"\>", ",", "\<\"heme\"\>", ",", "\<\"here\"\>", 
   ",", "\<\"high\"\>", ",", "\<\"hobo\"\>", ",", "\<\"huhs\"\>", 
   ",", "\<\"hush\"\>", ",", "\<\"Hutu\"\>", ",", "\<\"ibis\"\>", 
   ",", "\<\"ilia\"\>", ",", "\<\"imam\"\>", ",", "\<\"inti\"\>", 
   ",", "\<\"iris\"\>", ",", "\<\"Isis\"\>", ",", "\<\"isms\"\>", 
   ",", "\<\"Jana\"\>", ",", "\<\"java\"\>", ",", "\<\"Java\"\>", 
   ",", "\<\"Kama\"\>", ",", "\<\"Kara\"\>", ",", "\<\"kick\"\>", 
   ",", "\<\"kink\"\>", ",", "\<\"kirk\"\>", ",", "\<\"kiwi\"\>", 
   ",", "\<\"lama\"\>", ",", "\<\"Lana\"\>", ",", "\<\"Lara\"\>", 
   ",", "\<\"lava\"\>", ",", "\<\"lilo\"\>", ",", "\<\"lilt\"\>", 
   ",", "\<\"lily\"\>", ",", "\<\"loco\"\>", ",", "\<\"logo\"\>", 
   ",", "\<\"loll\"\>", ",", "\<\"luau\"\>", ",", "\<\"lull\"\>", 
   ",", "\<\"lulu\"\>", ",", "\<\"Lulu\"\>", ",", "\<\"Lvov\"\>", 
   ",", "\<\"Lyly\"\>", ",", "\<\"Maia\"\>", ",", "\<\"maim\"\>", 
   ",", "\<\"mama\"\>", ",", "\<\"mams\"\>", ",", "\<\"Mara\"\>", 
   ",", "\<\"Maya\"\>", ",", "\<\"memo\"\>", ",", "\<\"mere\"\>", 
   ",", "\<\"mete\"\>", ",", "\<\"midi\"\>", ",", "\<\"mime\"\>", 
   ",", "\<\"Mimi\"\>", ",", "\<\"mini\"\>", ",", "\<\"Moho\"\>", 
   ",", "\<\"moms\"\>", ",", "\<\"mono\"\>", ",", "\<\"Moro\"\>", 
   ",", "\<\"Mses\"\>", ",", "\<\"mums\"\>", ",", "\<\"nans\"\>", 
   ",", "\<\"Nara\"\>", ",", "\<\"NASA\"\>", ",", "\<\"neon\"\>", 
   ",", "\<\"nine\"\>", ",", "\<\"none\"\>", ",", "\<\"noun\"\>", 
   ",", "\<\"nuns\"\>", ",", "\<\"oboe\"\>", ",", "\<\"odor\"\>", 
   ",", "\<\"ohos\"\>", ",", "\<\"oleo\"\>", ",", "\<\"onto\"\>", 
   ",", "\<\"orzo\"\>", ",", "\<\"ouzo\"\>", ",", "\<\"papa\"\>", 
   ",", "\<\"paps\"\>", ",", "\<\"para\"\>", ",", "\<\"peke\"\>", 
   ",", "\<\"Pele\"\>", ",", "\<\"peps\"\>", ",", "\<\"Pete\"\>", 
   ",", "\<\"pimp\"\>", ",", "\<\"pipe\"\>", ",", "\<\"pips\"\>", 
   ",", "\<\"plop\"\>", ",", "\<\"pogo\"\>", ",", "\<\"Pogo\"\>", 
   ",", "\<\"polo\"\>", ",", "\<\"Polo\"\>", ",", "\<\"pomp\"\>", 
   ",", "\<\"pope\"\>", ",", "\<\"pops\"\>", ",", "\<\"prep\"\>", 
   ",", "\<\"prop\"\>", ",", "\<\"psis\"\>", ",", "\<\"pulp\"\>", 
   ",", "\<\"pump\"\>", ",", "\<\"pupa\"\>", ",", "\<\"pups\"\>", 
   ",", "\<\"raga\"\>", ",", "\<\"Rama\"\>", ",", "\<\"rare\"\>", 
   ",", "\<\"rear\"\>", ",", "\<\"Rene\"\>", ",", "\<\"roar\"\>", 
   ",", "\<\"Saba\"\>", ",", "\<\"sacs\"\>", ",", "\<\"saga\"\>", 
   ",", "\<\"sags\"\>", ",", "\<\"Sana\"\>", ",", "\<\"sans\"\>", 
   ",", "\<\"saps\"\>", ",", "\<\"Sara\"\>", ",", "\<\"sash\"\>", 
   ",", "\<\"sass\"\>", ",", "\<\"saws\"\>", ",", "\<\"says\"\>", 
   ",", "\<\"seas\"\>", ",", "\<\"secs\"\>", ",", "\<\"sens\"\>", 
   ",", "\<\"sere\"\>", ",", "\<\"sets\"\>", ",", "\<\"sews\"\>", 
   ",", "\<\"shah\"\>", ",", "\<\"shes\"\>", ",", "\<\"sics\"\>", 
   ",", "\<\"sins\"\>", ",", "\<\"sips\"\>", ",", "\<\"sirs\"\>", 
   ",", "\<\"sits\"\>", ",", "\<\"skis\"\>", ",", "\<\"sobs\"\>", 
   ",", "\<\"socs\"\>", ",", "\<\"sods\"\>", ",", "\<\"Soho\"\>", 
   ",", "\<\"solo\"\>", ",", "\<\"sols\"\>", ",", "\<\"sons\"\>", 
   ",", "\<\"sops\"\>", ",", "\<\"Soto\"\>", ",", "\<\"sots\"\>", 
   ",", "\<\"sous\"\>", ",", "\<\"sows\"\>", ",", "\<\"spas\"\>", 
   ",", "\<\"stet\"\>", ",", "\<\"subs\"\>", ",", "\<\"suds\"\>", 
   ",", "\<\"sues\"\>", ",", "\<\"sums\"\>", ",", "\<\"suns\"\>", 
   ",", "\<\"sups\"\>", ",", "\<\"suss\"\>", ",", "\<\"tact\"\>", 
   ",", "\<\"Tana\"\>", ",", "\<\"Tara\"\>", ",", "\<\"tart\"\>", 
   ",", "\<\"tats\"\>", ",", "\<\"taut\"\>", ",", "\<\"teat\"\>", 
   ",", "\<\"tent\"\>", ",", "\<\"test\"\>", ",", "\<\"text\"\>", 
   ",", "\<\"that\"\>", ",", "\<\"tilt\"\>", ",", "\<\"tint\"\>", 
   ",", "\<\"Togo\"\>", ",", "\<\"Tojo\"\>", ",", "\<\"tort\"\>", 
   ",", "\<\"tote\"\>", ",", "\<\"Toto\"\>", ",", "\<\"tots\"\>", 
   ",", "\<\"tout\"\>", ",", "\<\"trot\"\>", ",", "\<\"tuft\"\>", 
   ",", "\<\"tuts\"\>", ",", "\<\"tutu\"\>", ",", "\<\"Tutu\"\>", 
   ",", "\<\"twit\"\>", ",", "\<\"uses\"\>", ",", "\<\"viva\"\>", 
   ",", "\<\"were\"\>", ",", "\<\"whew\"\>", ",", "\<\"wows\"\>", 
   ",", "\<\"Yoko\"\>", ",", "\<\"Zeke\"\>", ",", "\<\"Zulu\"\>"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AlmostPalindrome",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "2", "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"AC\"\>", ",", "\<\"ad\"\>", ",", "\<\"AD\"\>", 
   ",", "\<\"ah\"\>", ",", "\<\"am\"\>", ",", "\<\"AM\"\>", ",", "\<\"an\"\>",
    ",", "\<\"as\"\>", ",", "\<\"at\"\>", ",", "\<\"ax\"\>", 
   ",", "\<\"BC\"\>", ",", "\<\"be\"\>", ",", "\<\"bi\"\>", ",", "\<\"by\"\>",
    ",", "\<\"CD\"\>", ",", "\<\"cs\"\>", ",", "\<\"cw\"\>", 
   ",", "\<\"db\"\>", ",", "\<\"dB\"\>", ",", "\<\"dc\"\>", ",", "\<\"DJ\"\>",
    ",", "\<\"do\"\>", ",", "\<\"Ed\"\>", ",", "\<\"eh\"\>", 
   ",", "\<\"em\"\>", ",", "\<\"en\"\>", ",", "\<\"er\"\>", ",", "\<\"es\"\>",
    ",", "\<\"ET\"\>", ",", "\<\"ex\"\>", ",", "\<\"fa\"\>", 
   ",", "\<\"FM\"\>", ",", "\<\"GE\"\>", ",", "\<\"GI\"\>", ",", "\<\"go\"\>",
    ",", "\<\"GP\"\>", ",", "\<\"gs\"\>", ",", "\<\"ha\"\>", 
   ",", "\<\"he\"\>", ",", "\<\"hi\"\>", ",", "\<\"hm\"\>", ",", "\<\"ho\"\>",
    ",", "\<\"HQ\"\>", ",", "\<\"id\"\>", ",", "\<\"ID\"\>", 
   ",", "\<\"if\"\>", ",", "\<\"in\"\>", ",", "\<\"IQ\"\>", ",", "\<\"is\"\>",
    ",", "\<\"it\"\>", ",", "\<\"IT\"\>", ",", "\<\"jg\"\>", 
   ",", "\<\"Jo\"\>", ",", "\<\"kc\"\>", ",", "\<\"KO\"\>", ",", "\<\"ks\"\>",
    ",", "\<\"kw\"\>", ",", "\<\"kW\"\>", ",", "\<\"la\"\>", 
   ",", "\<\"Le\"\>", ",", "\<\"lo\"\>", ",", "\<\"ls\"\>", ",", "\<\"ma\"\>",
    ",", "\<\"MC\"\>", ",", "\<\"me\"\>", ",", "\<\"mi\"\>", 
   ",", "\<\"Mr\"\>", ",", "\<\"ms\"\>", ",", "\<\"Ms\"\>", ",", "\<\"mu\"\>",
    ",", "\<\"my\"\>", ",", "\<\"no\"\>", ",", "\<\"nu\"\>", 
   ",", "\<\"of\"\>", ",", "\<\"oh\"\>", ",", "\<\"oi\"\>", ",", "\<\"OK\"\>",
    ",", "\<\"om\"\>", ",", "\<\"on\"\>", ",", "\<\"or\"\>", 
   ",", "\<\"ow\"\>", ",", "\<\"ox\"\>", ",", "\<\"Oz\"\>", ",", "\<\"pa\"\>",
    ",", "\<\"PC\"\>", ",", "\<\"pH\"\>", ",", "\<\"pi\"\>", 
   ",", "\<\"PM\"\>", ",", "\<\"re\"\>", ",", "\<\"Rh\"\>", ",", "\<\"rs\"\>",
    ",", "\<\"Rx\"\>", ",", "\<\"sh\"\>", ",", "\<\"so\"\>", 
   ",", "\<\"ta\"\>", ",", "\<\"TB\"\>", ",", "\<\"ti\"\>", ",", "\<\"TM\"\>",
    ",", "\<\"to\"\>", ",", "\<\"ts\"\>", ",", "\<\"TV\"\>", 
   ",", "\<\"Ty\"\>", ",", "\<\"uh\"\>", ",", "\<\"UK\"\>", ",", "\<\"um\"\>",
    ",", "\<\"UN\"\>", ",", "\<\"up\"\>", ",", "\<\"us\"\>", 
   ",", "\<\"US\"\>", ",", "\<\"vs\"\>", ",", "\<\"we\"\>", ",", "\<\"Wm\"\>",
    ",", "\<\"Wu\"\>", ",", "\<\"xi\"\>", ",", "\<\"XL\"\>", 
   ",", "\<\"ya\"\>", ",", "\<\"ye\"\>", ",", "\<\"yo\"\>"}], "}"}]], "Output",\

 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]="]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{"SectionGrouping", 0}],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"554e3c91-6a0c-4cf9-8358-85815f84a366"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider"],

Cell[BoxData[""], "WCIntroDividerLine"],

Cell["\<\
Given a word, make a list containing all words that can be made by removing \
one letter\
\>", "Text",
 CellChangeTimes->{{3.7657858653629727`*^9, 
  3.7657859071312323`*^9}},ExpressionUUID->"f2a38a6c-32b7-4d01-9038-\
120bc15f743e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"OneLetterAways", "[", "str_String", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"StringDrop", "[", 
     RowBox[{"str", ",", 
      RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"StringLength", "[", "str", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7651693111161685`*^9, 3.7651695589225254`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7e5eae54-b224-4db5-af7c-dc45d6ed6693"],

Cell["\<\
If any of the oneLetterAway words is a palindrome, the word is an \
AlmostPalindrome. NOTE: if a word is already a palindrome it can\
\[CloseCurlyQuote]t also be an AlmostPalindrome (i.e. Otto is not)\
\>", "Text",
 CellChangeTimes->{{3.765785950934049*^9, 
  3.765786089170231*^9}},ExpressionUUID->"afdc7f06-f99a-42a1-9f76-\
141a80346784"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlmostPalindromeQ", "[", "str_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"PalindromeQ", "[", "str", "]"}]}], "&&", 
   RowBox[{"AnyTrue", "[", 
    RowBox[{
     RowBox[{"OneLetterAways", "[", "str", "]"}], ",", "PalindromeQ"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.765168793802946*^9, 3.765168819433463*^9}, {
  3.7651696249858165`*^9, 3.7651696456741433`*^9}, {3.7651700392592773`*^9, 
  3.765170045466689*^9}, {3.765170310126961*^9, 3.7651703210667267`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"e53e9563-b18b-46ba-bc72-58acb6bae067"],

Cell["\<\
Fetch the words from dictionary and apply the test to every word at the \
correct length\
\>", "Text",
 CellChangeTimes->{{3.7657861219156303`*^9, 
  3.7657861497850714`*^9}},ExpressionUUID->"3f33f628-36e7-4ddf-9cf8-\
d998cb1bac88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AlmostPalindrome", "[", 
   RowBox[{"n_Integer", "?", "Positive"}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   StyleBox[
    RowBox[{
     RowBox[{"DictionaryLookup", "[", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", "n"}], "&&", 
       RowBox[{"AlmostPalindromeQ", "[", "#", "]"}]}], "&"}]}], "InlineCode"], 
   StyleBox["]", "InlineCode"]}]}]], "Input",
 CellChangeTimes->{{3.7651700759950686`*^9, 3.765170078955158*^9}},
 CellTags->"NoLabel",
 CellLabel->"In[3]:=",ExpressionUUID->"16c96b06-6bac-459a-8d6c-918b3313f68e"],

Cell["Testing", "Text",
 CellChangeTimes->{{3.7657861729361362`*^9, 
  3.765786173851699*^9}},ExpressionUUID->"92f76d74-bc22-49a3-be4d-\
023bbadd93ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AlmostPalindrome", "[", "5", "]"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"8b3a4b0f-18b3-4d7e-ac89-66fb392c2653"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"allay\"\>", ",", "\<\"annal\"\>", ",", "\<\"arras\"\>", 
   ",", "\<\"array\"\>", ",", "\<\"assay\"\>", ",", "\<\"attar\"\>", 
   ",", "\<\"belle\"\>", ",", "\<\"Bette\"\>", ",", "\<\"boffo\"\>", 
   ",", "\<\"boobs\"\>", ",", "\<\"booby\"\>", ",", "\<\"calla\"\>", 
   ",", "\<\"cirri\"\>", ",", "\<\"deeds\"\>", ",", "\<\"ebbed\"\>", 
   ",", "\<\"effed\"\>", ",", "\<\"egged\"\>", ",", "\<\"erred\"\>", 
   ",", "\<\"freer\"\>", ",", "\<\"gamma\"\>", ",", "\<\"Greer\"\>", 
   ",", "\<\"Hakka\"\>", ",", "\<\"Hanna\"\>", ",", "\<\"Hesse\"\>", 
   ",", "\<\"hooch\"\>", ",", "\<\"innit\"\>", ",", "\<\"Janna\"\>", 
   ",", "\<\"Jesse\"\>", ",", "\<\"kappa\"\>", ",", "\<\"kooks\"\>", 
   ",", "\<\"kooky\"\>", ",", "\<\"Lassa\"\>", ",", "\<\"lemme\"\>", 
   ",", "\<\"Lippi\"\>", ",", "\<\"lotto\"\>", ",", "\<\"manna\"\>", 
   ",", "\<\"motto\"\>", ",", "\<\"Nikki\"\>", ",", "\<\"noons\"\>", 
   ",", "\<\"peeps\"\>", ",", "\<\"poops\"\>", ",", "\<\"ragga\"\>", 
   ",", "\<\"recce\"\>", ",", "\<\"Rocco\"\>", ",", "\<\"Rollo\"\>", 
   ",", "\<\"seeds\"\>", ",", "\<\"seeks\"\>", ",", "\<\"seems\"\>", 
   ",", "\<\"seeps\"\>", ",", "\<\"seers\"\>", ",", "\<\"sells\"\>", 
   ",", "\<\"setts\"\>", ",", "\<\"shoos\"\>", ",", "\<\"sills\"\>", 
   ",", "\<\"teeth\"\>", ",", "\<\"tooth\"\>", ",", "\<\"toots\"\>", 
   ",", "\<\"tweet\"\>", ",", "\<\"villi\"\>", ",", "\<\"walla\"\>", 
   ",", "\<\"wanna\"\>", ",", "\<\"yobbo\"\>", ",", "\<\"yukky\"\>", 
   ",", "\<\"yummy\"\>", ",", "\<\"Zappa\"\>", ",", "\<\"Zorro\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7657861776455374`*^9, 3.8130612686589923`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"1fe6f8fe-5f53-4bdd-a88d-d9c224fc655f"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {120., {17., 23.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; If[
          Not[
           ValueQ[
           WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy]], 
          WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy = 
          CloudGet[
            FileNameJoin[{
              CloudObject[
              "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "RunWithSubmissionPolicy"}]]]; 
        WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy[If[
            Or[$VersionNumber >= 11.1, 
             ChoiceDialog[
              StringJoin["Wolfram Challenges is designed for version ", 
               ToString[11.1], 
               " or later of the Wolfram System, and may not function \
properly with the older ", 
               "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
            If[
             Not[
              StringQ[
               If[
                Not[$CloudConnected], 
                CloudConnect[], $WolframID]]], 
             MessageDialog[
             "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               Quiet[
                Quiet[If[
                   TrueQ[WolframChallenges`Common`$ActiveClearing], 
                   Quiet[
                    Unset[
                    Once["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                   
                   Module[{CodeEquivalence`Utilities`Private`result$}, 
                    Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.205"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                    CodeEquivalence`Utilities`Private`result$], 
                   CodeEquivalence`Utilities`OnceUnlessFailed], 
                 MessageName[CloudObject, "invuri"]], 
                MessageName[$CharacterEncoding, "utf8"]][
                CloudObject[
                "https://www.wolframcloud.com/objects/wolframchallenges/\
public/api/check"], {"AlmostPalindrome"}, "public/pub/p-00dc6e25551d0c11"]]]]; 
          Null])& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}],
   TemplateBox[{10}, "Spacer1"],DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"22f4c819-15b2-4992-b357-\
43bfbcc55540"]
},
WindowSize->{1278, 1358},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], ShowStringCharacters -> 
   False, Background -> RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.205", "FrameworkVersion" -> "public-2.17.205", 
    "PacletBuildDate" -> 
    DateObject[{2018, 4, 12, 2, 0, 29.8383958`9.227350380539981}, "Instant", 
      "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2018, 4, 12, 3, 8, 35.585639`8.303849748334427}, "Instant", 
      "Gregorian", 0.], "Hash" -> "00dc6e25551d0c11", "Key" -> 
    "public/pub/p-00dc6e25551d0c11", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"AlmostPalindrome"}, "Status" -> "Published", 
    "Source" -> CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
00dc6e25551d0c11"], "ReviewNotebook" -> False]},
ShowAutoSpellCheck->False,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[18984, 449, 633, 16, 32, "Input",ExpressionUUID->"16c96b06-6bac-459a-8d6c-918b3313f68e",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 46612, 1003}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 35, 0, 93, "Title",ExpressionUUID->"585d8a4a-45b4-4dab-800d-f571045b14ad"],
Cell[618, 24, 633, 20, 66, "WCIntroDivider",ExpressionUUID->"8e72bdcf-541f-4c10-8497-e6a110c214e8"],
Cell[1254, 46, 30, 0, 26, "WCIntroDividerLine",ExpressionUUID->"399b77b1-ac03-4e24-a49d-c0569748983a"],
Cell[1287, 48, 129, 3, 35, "Description",ExpressionUUID->"c243463d-12a3-456e-b30d-f47cf52982b6"],
Cell[CellGroupData[{
Cell[1441, 55, 31, 0, 72, "Section",ExpressionUUID->"2ef1d3a8-bf19-49c3-9655-bb968b110e4f"],
Cell[1475, 57, 404, 6, 74, "Text",ExpressionUUID->"2694a00e-a1c2-458d-98cc-7f7ba1bbbb40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1916, 68, 47, 0, 72, "Section",ExpressionUUID->"7a49f364-f3ca-4145-bf25-37d8594d903c"],
Cell[1966, 70, 579, 15, 51, "Text",ExpressionUUID->"18eb50fc-2a57-4488-a54f-eb76588021b4"],
Cell[CellGroupData[{
Cell[2570, 89, 362, 10, 30, "Input",ExpressionUUID->"3f459b9d-6d9f-412b-be52-4c043d9e82e3",
 Evaluatable->False],
Cell[2935, 101, 1659, 27, 101, "Output",ExpressionUUID->"1445ed1a-7f08-4cce-b184-67085a287e36"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4643, 134, 35, 0, 72, "Subsection",ExpressionUUID->"04f5d7c6-a98d-412d-8021-5dfb36fad234"],
Cell[CellGroupData[{
Cell[4703, 138, 239, 9, 30, "Input",ExpressionUUID->"544fe373-e72c-455e-91f7-8a8a77843eba",
 Evaluatable->False],
Cell[4945, 149, 1120, 20, 57, "Output",ExpressionUUID->"cad1605b-ac5b-470a-aa7e-74858b7d7229"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6102, 174, 239, 9, 30, "Input",ExpressionUUID->"b7babe7e-cd38-42fd-8f5d-2e60a0fc00be",
 Evaluatable->False],
Cell[6344, 185, 6479, 100, 299, "Output",ExpressionUUID->"dc2a851c-bcfb-4197-8fe4-32aeb7cfab84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12860, 290, 239, 9, 30, "Input",ExpressionUUID->"7a7fade6-244b-4dac-8395-a71548605ce8",
 Evaluatable->False],
Cell[13102, 301, 2496, 39, 101, "Output",ExpressionUUID->"f626cb2a-7bf9-4b37-8bae-a90793c07fd2"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15659, 347, 623, 20, 61, "WCIntroDivider",ExpressionUUID->"be3e79dd-c9f6-4bbd-bc40-5e3e2b796fd9",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[16285, 369, 131, 2, 42, "WCIntroDividerLine",ExpressionUUID->"554e3c91-6a0c-4cf9-8358-85815f84a366"],
Cell[16419, 373, 605, 19, 64, "WCIntroDivider",ExpressionUUID->"004c17f8-ac2f-4bdb-8dd6-78f459e42df9"],
Cell[17027, 394, 39, 0, 42, "WCIntroDividerLine",ExpressionUUID->"bdf66f4c-4247-4f45-a412-409f89414a00"],
Cell[17069, 396, 242, 6, 28, "Text",ExpressionUUID->"f2a38a6c-32b7-4d01-9038-120bc15f743e"],
Cell[17314, 404, 461, 11, 32, "Input",ExpressionUUID->"7e5eae54-b224-4db5-af7c-dc45d6ed6693"],
Cell[17778, 417, 350, 7, 51, "Text",ExpressionUUID->"afdc7f06-f99a-42a1-9f76-141a80346784"],
Cell[18131, 426, 605, 13, 32, "Input",ExpressionUUID->"e53e9563-b18b-46ba-bc72-58acb6bae067"],
Cell[18739, 441, 242, 6, 28, "Text",ExpressionUUID->"3f33f628-36e7-4ddf-9cf8-d998cb1bac88"],
Cell[18984, 449, 633, 16, 32, "Input",ExpressionUUID->"16c96b06-6bac-459a-8d6c-918b3313f68e",
 CellTags->"NoLabel"],
Cell[19620, 467, 151, 3, 28, "Text",ExpressionUUID->"92f76d74-bc22-49a3-be4d-023bbadd93ed"],
Cell[CellGroupData[{
Cell[19796, 474, 147, 2, 32, "Input",ExpressionUUID->"8b3a4b0f-18b3-4d7e-ac89-66fb392c2653"],
Cell[19946, 478, 1738, 26, 109, "Output",ExpressionUUID->"1fe6f8fe-5f53-4bdd-a88d-d9c224fc655f"]
}, Open  ]]
}, Open  ]],
Cell[21711, 508, 9808, 209, 109, "SubmitRow",ExpressionUUID->"22f4c819-15b2-4992-b357-43bfbcc55540"]
}
]
*)

