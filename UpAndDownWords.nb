(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     52471,       1295]
NotebookOptionsPosition[     31047,        896]
NotebookOutlinePosition[     46470,       1193]
CellTagsIndexPosition[     46399,       1188]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Up and Down Words", "Title"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 37}}],

Cell["", "WCIntroDividerLine"],

Cell["\<\
For a given sequence of \"up\", \"down\" or \"same\", find all words such \
that the changes in letters match these directions in the alphabet.\
\>", "Description"],

Cell[CellGroupData[{

Cell["More Details", "Section"],

Cell["\<\
Given the sequence {\"up\", \"same\", \"up\", \"down\"}, find all five-letter \
words such that: \
\>", "Text"],

Cell["\<\
\"up\": letter 2 is up higher in the alphabet than letter 1
\"same\": letter 3 is the same as letter 2
\"up\": letter 4 is up higher than letter 3
\"down\": letter 5 is down lower than letter 4\
\>", "Text"],

Cell["\<\
This would include words such as \"moose\", \"issue\" and \"booth\", among \
others.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Code Should Do", "Section"],

Cell[TextData[{
 "Write a function ",
 StyleBox["UpDownWords", "InlineCode"],
 " that takes a list containing a sequence of the strings \"up\", \"down\" or \
\"same\" as input and outputs a sorted list of all the words that correspond \
to that sequence."
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{"\"\<down\>\"", ",", "\"\<same\>\"", ",", "\"\<down\>\""}], "}"}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[1]:=",ExpressionUUID->"537ceffe-e38c-477f-a472-d2c3d1d89012"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"feed\"\>", ",", "\<\"heed\"\>", ",", "\<\"meed\"\>", 
   ",", "\<\"need\"\>", ",", "\<\"poof\"\>", ",", "\<\"pooh\"\>", 
   ",", "\<\"pool\"\>", ",", "\<\"reed\"\>", ",", "\<\"rood\"\>", 
   ",", "\<\"roof\"\>", ",", "\<\"rook\"\>", ",", "\<\"room\"\>", 
   ",", "\<\"seed\"\>", ",", "\<\"soon\"\>", ",", "\<\"tool\"\>", 
   ",", "\<\"weed\"\>", ",", "\<\"wood\"\>", ",", "\<\"woof\"\>", 
   ",", "\<\"wool\"\>", ",", "\<\"zoom\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]="]
}, Open  ]],

Cell[TextData[{
 "The output should be a list of strings in ",
 Cell[BoxData[
  TemplateBox[{
   "\"Sort\"","paclet:ref/Sort","paclet:ref/Sort","Link",{"HyperlinkActive"},
    BaseStyle -> {"InlineCode", "Hyperlink"}},
   "HyperlinkTemplate"]]],
 " order:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<up\>\"", 
    ",", "\"\<down\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:=",ExpressionUUID->"bb0106fa-2a44-4538-952b-eaecf09fcd92"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aching\"\>", ",", "\<\"before\"\>", ",", "\<\"befoul\"\>", 
   ",", "\<\"behind\"\>", ",", "\<\"blowzy\"\>", ",", "\<\"census\"\>", 
   ",", "\<\"chorus\"\>", ",", "\<\"defile\"\>", ",", "\<\"define\"\>", 
   ",", "\<\"deform\"\>", ",", "\<\"deluxe\"\>", ",", "\<\"demote\"\>", 
   ",", "\<\"denote\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", "%", "]"}], "===", "%"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:="],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]="]
}, Open  ]],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
   "\"WordList\"","paclet:ref/WordList","paclet:ref/WordList","Link",{
    "HyperlinkActive"},BaseStyle -> {"InlineCode", "Hyperlink"}},
   "HyperlinkTemplate"]]],
 " as the source of possible words to be included in the output:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"", 
    ",", "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<up\>\"", ",", 
    "\"\<up\>\"", ",", "\"\<down\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"",
     ",", "\"\<down\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:=",ExpressionUUID->"b789a01b-531c-4311-9fa7-034a3fe5d282"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"counterstrike\"\>", ",", "\<\"imperceptible\"\>"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]=",ExpressionUUID->"9169fd52-d897-4e5d-b477-1bcc9051e231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AllTrue", "[", 
  RowBox[{"%", ",", 
   RowBox[{
    RowBox[{"MemberQ", "[", 
     RowBox[{
      RowBox[{"WordList", "[", "]"}], ",", "#"}], "]"}], "&"}]}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[5]:="],

Cell[BoxData["True"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[5]="]
}, Open  ]],

Cell["\<\
An empty list should correspond to words that have only a single letter:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[6]:="],

Cell[BoxData[
 RowBox[{"{", "\<\"a\"\>", "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[6]="]
}, Open  ]],

Cell["If no words match the given sequence, return an empty list:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{"\"\<same\>\"", ",", "\"\<same\>\"", ",", "\"\<same\>\""}], "}"}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[7]="]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"", 
    ",", "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", ",", 
    "\"\<up\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"",
     ",", "\"\<up\>\"", ",", "\"\<down\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[8]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"capitalization\"\>", ",", "\<\"generalization\"\>", 
   ",", "\<\"lateralization\"\>", ",", "\<\"militarization\"\>", 
   ",", "\<\"revitalization\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[8]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", ",", 
    "\"\<down\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"", ",", 
    "\"\<down\>\"", ",", "\"\<up\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"barometer\"\>", ",", "\<\"baronetcy\"\>", 
   ",", "\<\"cathedral\"\>", ",", "\<\"gasometer\"\>", 
   ",", "\<\"germicide\"\>", ",", "\<\"handbasin\"\>", 
   ",", "\<\"litigator\"\>", ",", "\<\"matriarch\"\>", 
   ",", "\<\"matricide\"\>", ",", "\<\"navigator\"\>", 
   ",", "\<\"neurology\"\>", ",", "\<\"newspaper\"\>", 
   ",", "\<\"nitpicker\"\>", ",", "\<\"obsolesce\"\>", 
   ",", "\<\"patriarch\"\>", ",", "\<\"patrician\"\>", 
   ",", "\<\"patricide\"\>", ",", "\<\"patrolman\"\>", 
   ",", "\<\"perfecter\"\>", ",", "\<\"perfectly\"\>", 
   ",", "\<\"petrology\"\>", ",", "\<\"physician\"\>", 
   ",", "\<\"plutocrat\"\>", ",", "\<\"resonance\"\>", 
   ",", "\<\"resonator\"\>", ",", "\<\"respecter\"\>", 
   ",", "\<\"retrieval\"\>", ",", "\<\"retriever\"\>", 
   ",", "\<\"skyrocket\"\>", ",", "\<\"southerly\"\>", 
   ",", "\<\"tautology\"\>", ",", "\<\"vengeance\"\>", 
   ",", "\<\"washbasin\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<down\>\"", ",", "\"\<down\>\"", ",", "\"\<down\>\"", ",", 
    "\"\<down\>\"", ",", "\"\<down\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{"{", "\<\"sponge\"\>", "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[10]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<up\>\"", ",", "\"\<down\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", 
    ",", "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<down\>\"", ",", 
    "\"\<up\>\"", ",", "\"\<same\>\""}], "}"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[11]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"decompress\"\>", ",", "\<\"fierceness\"\>", 
   ",", "\<\"flashiness\"\>", ",", "\<\"frothiness\"\>", 
   ",", "\<\"quenchless\"\>", ",", "\<\"standstill\"\>", 
   ",", "\<\"stinginess\"\>"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[11]="]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{"SectionGrouping", 0}],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"02d67380-4ac8-4830-a46a-18b062a0e100"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider"],

Cell[BoxData[""], "WCIntroDividerLine",ExpressionUUID->"114692dc-1bd5-48e8-ba9d-bb6435baca0a"],

Cell[TextData[StyleBox["First attempt at solution",
 FontSize->24,
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.7657931533697424`*^9, 3.76579315730923*^9}, {
  3.765793189421836*^9, 
  3.765793192441634*^9}},ExpressionUUID->"9e3b1c5a-2338-46e5-b5dc-\
378deaa46255"],

Cell["\<\
Given 2 letternumbers and an operation (\[OpenCurlyDoubleQuote]up\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]down\[CloseCurlyDoubleQuote] \
or \[OpenCurlyDoubleQuote]same\[CloseCurlyDoubleQuote]), return wether or not \
its passes the test\
\>", "Text",
 CellChangeTimes->{{3.7657932498040285`*^9, 
  3.7657933093817315`*^9}},ExpressionUUID->"6b4c2317-1bae-4c9f-9d15-\
9bf84066c8d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpDownLetterQ", "[", 
   RowBox[{"num1_Integer", ",", "num2_Integer", ",", "op_String"}], "]"}], ":=", 
  RowBox[{"Switch", "[", 
   RowBox[{"op", ",", "\"\<up\>\"", ",", 
    RowBox[{"num1", "<", "num2"}], ",", "\"\<down\>\"", ",", 
    RowBox[{"num1", ">", "num2"}], ",", "\"\<same\>\"", ",", 
    RowBox[{"num1", "\[Equal]", "num2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765636141307592*^9, 3.765636217475006*^9}, {
  3.7656362865424347`*^9, 3.7656363962857924`*^9}, {3.7656364321100173`*^9, 
  3.7656364602973423`*^9}, {3.7656381790457883`*^9, 3.765638303527966*^9}, {
  3.7657840016767883`*^9, 3.765784022619733*^9}, {3.7657964723852196`*^9, 
  3.7657964793234076`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"ff24b583-8c40-4417-9c6b-1dc5c1c340e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpDownWordQ", "[", 
   RowBox[{"word_String", ",", 
    RowBox[{"seq", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<up\>\"", "|", "\"\<same\>\"", "|", "\"\<down\>\""}], 
        ")"}], "..."}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ln", ":=", 
      RowBox[{"LetterNumber", "[", "word", "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"AllTrue", "[", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{"UpDownLetterQ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ln", "[", 
           RowBox[{
            RowBox[{"[", 
             RowBox[{"First", "[", "#2", "]"}], "]"}], ",", 
            RowBox[{"ln", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"First", "[", "#2", "]"}], "+", "1"}], "]"}], "]"}], 
            ",", "#1"}], "]"}], "&"}], ",", "seq"}], "]"}], ",", "TrueQ"}], 
      "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7656349210520463`*^9, 3.76563500594166*^9}, {
   3.765638484411539*^9, 3.7656385840434046`*^9}, {3.7656386309237523`*^9, 
   3.7656386402976627`*^9}, {3.7656386965309377`*^9, 3.765638738364522*^9}, {
   3.7656387898100758`*^9, 3.7656389079972887`*^9}, {3.765639576716379*^9, 
   3.765639593747698*^9}, {3.765639686985812*^9, 3.7656397245616646`*^9}, {
   3.765639793172703*^9, 3.7656398914726686`*^9}, {3.7656436307777357`*^9, 
   3.765643638998149*^9}, {3.7656445316233244`*^9, 3.7656446068069243`*^9}, {
   3.7656449024651465`*^9, 3.7656449272667727`*^9}, {3.7657840522684593`*^9, 
   3.7657841452509794`*^9}, {3.7657845307336564`*^9, 
   3.7657845329845896`*^9}, {3.765792800296275*^9, 3.765792802568197*^9}, 
   3.7657928349631023`*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"6b5ab6e0-48ec-45d7-81fe-b493b75f5689"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpDownWords", "[", 
   RowBox[{"seq", ":", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<up\>\"", "|", "\"\<same\>\"", "|", "\"\<down\>\""}], 
       ")"}], "..."}], "}"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"WordList", "[", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Length", "[", "seq", "]"}], "+", "1"}]}], "&&", 
      RowBox[{"UpDownWordQ", "[", 
       RowBox[{"#", ",", "seq"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765644708355833*^9, 3.7656448290988216`*^9}, {
  3.7656448739508295`*^9, 3.765644895990554*^9}, {3.765644935007427*^9, 
  3.765644938614867*^9}},
 CellTags->"NoLabel",
 CellLabel->"In[70]:=",ExpressionUUID->"682badfa-75c5-4f7b-b61d-b30683dbc8e0"],

Cell[TextData[StyleBox["Better solution",
 FontSize->24,
 FontWeight->"Plain"]], "Text",
 CellChangeTimes->{{3.7657931533697424`*^9, 
  3.76579315730923*^9}},ExpressionUUID->"cd04a670-c943-4cc1-bbe6-\
62dd4722d8a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpDownWordQ", "[", 
   RowBox[{"word_String", ",", 
    RowBox[{"seq", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\"\<up\>\"", "|", "\"\<same\>\"", "|", "\"\<down\>\""}], 
        ")"}], "..."}], "}"}]}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Sign", "[", 
    RowBox[{"Differences", "[", 
     RowBox[{"LetterNumber", "[", "word", "]"}], "]"}], "]"}], "==", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Switch", "[", 
       RowBox[{
       "#", ",", "\"\<up\>\"", ",", "1", ",", "\"\<same\>\"", ",", "0", ",", 
        "\"\<down\>\"", ",", 
        RowBox[{"-", "1"}]}], "]"}], "&"}], ",", "seq"}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.765791982858474*^9, 3.7657920592113366`*^9}, {
  3.765792135408712*^9, 3.7657921713578405`*^9}, {3.765792361016446*^9, 
  3.765792404825036*^9}, {3.7657928515130777`*^9, 3.7657928530180516`*^9}, {
  3.7657930180258617`*^9, 3.765793018927004*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"03cb44dd-5dd9-4a06-b4c5-7415c88a0aa9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpDownWords", "[", 
   RowBox[{"seq", ":", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\"\<up\>\"", "|", "\"\<same\>\"", "|", "\"\<down\>\""}], 
       ")"}], "..."}], "}"}]}], "]"}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{"WordList", "[", "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"StringLength", "[", "#", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"Length", "[", "seq", "]"}], "+", "1"}]}], "&&", 
      RowBox[{"UpDownWordQ", "[", 
       RowBox[{"#", ",", "seq"}], "]"}]}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.765644708355833*^9, 3.7656448290988216`*^9}, {
   3.7656448739508295`*^9, 3.765644895990554*^9}, {3.765644935007427*^9, 
   3.765644938614867*^9}, {3.7657926155369897`*^9, 3.765792640312668*^9}, 
   3.7657933811473665`*^9},
 CellTags->"NoLabel",
 CellLabel->"In[72]:=",ExpressionUUID->"e01cf5d1-be25-47be-9025-eecdbcd39985"],

Cell["Testing", "Text",
 CellChangeTimes->{{3.765793095528454*^9, 
  3.7657930965738726`*^9}},ExpressionUUID->"6dd55c46-4029-4e53-9f11-\
ad87e75ae748"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{"\"\<down\>\"", ",", "\"\<same\>\"", ",", "\"\<down\>\""}], "}"}], 
  "]"}]], "Input",
 CellLabel->"In[73]:=",ExpressionUUID->"8a842580-67d2-4959-a227-a626f727e6c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"feed\"\>", ",", "\<\"heed\"\>", ",", "\<\"meed\"\>", 
   ",", "\<\"need\"\>", ",", "\<\"poof\"\>", ",", "\<\"pooh\"\>", 
   ",", "\<\"pool\"\>", ",", "\<\"reed\"\>", ",", "\<\"rood\"\>", 
   ",", "\<\"roof\"\>", ",", "\<\"rook\"\>", ",", "\<\"room\"\>", 
   ",", "\<\"seed\"\>", ",", "\<\"soon\"\>", ",", "\<\"tool\"\>", 
   ",", "\<\"weed\"\>", ",", "\<\"wood\"\>", ",", "\<\"woof\"\>", 
   ",", "\<\"wool\"\>", ",", "\<\"zoom\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.765784676044468*^9, 3.765792417807499*^9, 3.765792465430343*^9, 
   3.765792667364587*^9, 3.7657930251297345`*^9, {3.765793214798564*^9, 
   3.765793224426937*^9}, 3.765796487201324*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"db42b531-9b2f-4fe6-88b4-a7be43dcb990"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["UpDownWords",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<up\>\"", ",", "\"\<up\>\"", 
    ",", "\"\<down\>\""}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.765783862708495*^9, 3.7657838784923563`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"03262c93-736d-4a55-8647-610ada53f7e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"aching\"\>", ",", "\<\"before\"\>", ",", "\<\"befoul\"\>", 
   ",", "\<\"behind\"\>", ",", "\<\"blowzy\"\>", ",", "\<\"census\"\>", 
   ",", "\<\"chorus\"\>", ",", "\<\"defile\"\>", ",", "\<\"define\"\>", 
   ",", "\<\"deform\"\>", ",", "\<\"deluxe\"\>", ",", "\<\"demote\"\>", 
   ",", "\<\"denote\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7657838863602633`*^9, 3.7657841679153094`*^9, 3.765784682063365*^9, 
   3.765792421383601*^9, 3.765793027288355*^9, {3.7657932175076437`*^9, 
   3.765793227283616*^9}, 3.7657964894712124`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"6903d96a-b177-408c-9c4d-10a29d737ae8"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {120., {17., 23.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; (If[
           Or[$VersionNumber >= 11.1, 
            ChoiceDialog[
             StringJoin["Wolfram Challenges is designed for version ", 
              ToString[11.1], 
              " or later of the Wolfram System, and may not function properly \
with the older ", 
              "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
           If[
            Not[
             StringQ[
              If[
               Not[$CloudConnected], 
               CloudConnect[], $WolframID]]], 
            MessageDialog[
            "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
              Quiet[If[
                 TrueQ[WolframChallenges`Common`$ActiveClearing], 
                 Quiet[
                  Unset[
                   Once["public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                 
                 Module[{CodeEquivalence`Utilities`Private`result$}, 
                  Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                  CodeEquivalence`Utilities`Private`result$], 
                 CodeEquivalence`Utilities`OnceUnlessFailed], 
               MessageName[CloudObject, "invuri"]], 
              MessageName[$CharacterEncoding, "utf8"]][
              Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.221"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               CloudObject[
               "https://www.wolframcloud.com/objects/wolframchallenges/public/\
api/check"], {"UpDownWords"}, "public/pub/p-47fe1792325afe32"]]]]; 
         Null))& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}],
   TemplateBox[{10}, "Spacer1"],DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"83e30bd8-e733-484e-ba4e-\
29b5f0682bb5"]
},
WindowSize->{1276, 1357},
WindowMargins->{{Automatic, -6}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], ShowStringCharacters -> 
   False, Background -> RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.221", "FrameworkVersion" -> "public-2.17.221", 
    "PacletBuildDate" -> 
    DateObject[{2018, 4, 18, 17, 6, 31.6526975`9.252985631896541}, "Instant", 
      "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2018, 5, 2, 14, 15, 45.185132`8.407570532215562}, "Instant", 
      "Gregorian", 0.], "Hash" -> "47fe1792325afe32", "Key" -> 
    "public/pub/p-47fe1792325afe32", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"UpDownWords"}, "Status" -> "Published", "Source" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
47fe1792325afe32"], "ReviewNotebook" -> False]},
ShowAutoSpellCheck->False,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> "11.3 for Microsoft Windows (64-bit) (March 6, 2018)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[16177, 544, 890, 24, 34, "Input",ExpressionUUID->"682badfa-75c5-4f7b-b61d-b30683dbc8e0",
   CellTags->"NoLabel"],
  Cell[18354, 606, 968, 25, 34, "Input",ExpressionUUID->"e01cf5d1-be25-47be-9025-eecdbcd39985",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 46133, 1180}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 34, 0, 93, "Title",ExpressionUUID->"94d7f18f-e528-4c47-aae0-f4a9d57f3c7f"],
Cell[617, 24, 633, 20, 66, "WCIntroDivider",ExpressionUUID->"d196a4a1-a1e8-435e-be8a-b0a481a08449"],
Cell[1253, 46, 30, 0, 26, "WCIntroDividerLine",ExpressionUUID->"7017d191-18ab-4aea-a3d3-185b8d42b649"],
Cell[1286, 48, 174, 3, 35, "Description",ExpressionUUID->"726ae47c-f6bf-44d4-b9e9-87201c1295e6"],
Cell[CellGroupData[{
Cell[1485, 55, 31, 0, 72, "Section",ExpressionUUID->"ffbdd999-05b3-4d22-9baa-099463212a48"],
Cell[1519, 57, 121, 3, 28, "Text",ExpressionUUID->"d00cb239-09ed-457b-8d63-525974b9ae10"],
Cell[1643, 62, 217, 5, 97, "Text",ExpressionUUID->"28adafcf-ca65-465e-bc54-3c048ae00f40"],
Cell[1863, 69, 108, 3, 28, "Text",ExpressionUUID->"fedd925d-6110-46fa-b14f-4d66ba493a4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2008, 77, 43, 0, 72, "Section",ExpressionUUID->"2f108dec-db41-495f-abe8-372b7b021c07"],
Cell[2054, 79, 267, 6, 51, "Text",ExpressionUUID->"e4fa9739-4252-43ca-bd52-112050ac10ef"],
Cell[CellGroupData[{
Cell[2346, 89, 382, 12, 30, "Input",ExpressionUUID->"537ceffe-e38c-477f-a472-d2c3d1d89012",
 Evaluatable->False],
Cell[2731, 103, 564, 11, 34, "Output",ExpressionUUID->"a464f4a8-69f3-4918-a9c3-930876811554"]
}, Open  ]],
Cell[3310, 117, 268, 8, 28, "Text",ExpressionUUID->"da66f750-5736-403f-8c16-3ca9c5fb9368"],
Cell[CellGroupData[{
Cell[3603, 129, 422, 13, 30, "Input",ExpressionUUID->"bb0106fa-2a44-4538-952b-eaecf09fcd92",
 Evaluatable->False],
Cell[4028, 144, 435, 9, 34, "Output",ExpressionUUID->"bc30b72f-0af1-4d87-a2c5-1cbd6d07473c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4500, 158, 188, 7, 30, "Input",ExpressionUUID->"92253867-0000-49b2-a9d5-d370fd581e24",
 Evaluatable->False],
Cell[4691, 167, 98, 3, 34, "Output",ExpressionUUID->"86230a54-bda5-48e7-a912-cd1828968f39"]
}, Open  ]],
Cell[4804, 173, 297, 8, 28, "Text",ExpressionUUID->"0912bc98-d154-42c0-8154-d90b851331f7"],
Cell[CellGroupData[{
Cell[5126, 185, 573, 15, 30, "Input",ExpressionUUID->"b789a01b-531c-4311-9fa7-034a3fe5d282",
 Evaluatable->False],
Cell[5702, 202, 238, 6, 34, "Output",ExpressionUUID->"9169fd52-d897-4e5d-b477-1bcc9051e231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5977, 213, 307, 12, 30, "Input",ExpressionUUID->"730fa8cd-a523-42e8-8f54-d0dc849da26d",
 Evaluatable->False],
Cell[6287, 227, 98, 3, 34, "Output",ExpressionUUID->"537b6c65-996c-4764-ac9c-0eccb52ea5f8"]
}, Open  ]],
Cell[6400, 233, 96, 2, 28, "Text",ExpressionUUID->"a9354172-3481-44e7-b2b3-809fb3dcba9d"],
Cell[CellGroupData[{
Cell[6521, 239, 252, 10, 30, "Input",ExpressionUUID->"a2223979-e60d-42d6-8a88-d4c1246a3583",
 Evaluatable->False],
Cell[6776, 251, 125, 4, 34, "Output",ExpressionUUID->"85618db2-fcf2-4c44-99b7-e9af9eb6c211"]
}, Open  ]],
Cell[6916, 258, 75, 0, 28, "Text",ExpressionUUID->"2800c249-8ea5-431a-8a1b-2ff35df7cc0e"],
Cell[CellGroupData[{
Cell[7016, 262, 327, 12, 30, "Input",ExpressionUUID->"deb08d87-87ea-49c4-8e33-d26d28acbed0",
 Evaluatable->False],
Cell[7346, 276, 112, 4, 34, "Output",ExpressionUUID->"789aec80-a557-4ee1-bf18-a6356ef8b695"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7507, 286, 35, 0, 72, "Subsection",ExpressionUUID->"4dc894a3-5b4b-40da-a175-ab5260e648e6"],
Cell[CellGroupData[{
Cell[7567, 290, 541, 15, 70, "Input",ExpressionUUID->"fe044b45-2d3f-4b50-b57a-76f85169a746",
 Evaluatable->False],
Cell[8111, 307, 283, 7, 70, "Output",ExpressionUUID->"3f58a6f5-9957-437a-9ed2-f46322864c12"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8431, 319, 437, 14, 70, "Input",ExpressionUUID->"c939979f-ac2b-4400-b4f9-568b5463c80c",
 Evaluatable->False],
Cell[8871, 335, 1042, 21, 70, "Output",ExpressionUUID->"f0f89c01-7df7-4632-b593-4db37c3882f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9950, 361, 376, 13, 70, "Input",ExpressionUUID->"6d8b627a-ea00-4c49-91ec-96ab53aa27b4",
 Evaluatable->False],
Cell[10329, 376, 131, 4, 70, "Output",ExpressionUUID->"a3f01968-6da5-4850-8057-9023c1af16b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10497, 385, 455, 14, 70, "Input",ExpressionUUID->"248c545a-2d55-4378-82af-9cf6440194cd",
 Evaluatable->False],
Cell[10955, 401, 322, 8, 70, "Output",ExpressionUUID->"6e95c633-e81f-4cff-ad62-6aa1f963534a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11338, 416, 623, 20, 61, "WCIntroDivider",ExpressionUUID->"f49754d1-09d9-4d8d-bb8d-8c69d13eec86",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[11964, 438, 131, 2, 42, "WCIntroDividerLine",ExpressionUUID->"02d67380-4ac8-4830-a46a-18b062a0e100"],
Cell[12098, 442, 605, 19, 64, "WCIntroDivider",ExpressionUUID->"eaa1e2fb-151d-45bc-9a60-ef9d3d21f693"],
Cell[12706, 463, 94, 0, 42, "WCIntroDividerLine",ExpressionUUID->"114692dc-1bd5-48e8-ba9d-bb6435baca0a"],
Cell[12803, 465, 274, 6, 39, "Text",ExpressionUUID->"9e3b1c5a-2338-46e5-b5dc-378deaa46255"],
Cell[13080, 473, 400, 8, 28, "Text",ExpressionUUID->"6b4c2317-1bae-4c9f-9d15-9bf84066c8d0"],
Cell[13483, 483, 796, 14, 32, "Input",ExpressionUUID->"ff24b583-8c40-4417-9c6b-1dc5c1c340e4"],
Cell[14282, 499, 1892, 43, 82, "Input",ExpressionUUID->"6b5ab6e0-48ec-45d7-81fe-b493b75f5689"],
Cell[16177, 544, 890, 24, 34, "Input",ExpressionUUID->"682badfa-75c5-4f7b-b61d-b30683dbc8e0",
 CellTags->"NoLabel"],
Cell[17070, 570, 215, 5, 39, "Text",ExpressionUUID->"cd04a670-c943-4cc1-bbe6-62dd4722d8a2"],
Cell[17288, 577, 1063, 27, 58, "Input",ExpressionUUID->"03cb44dd-5dd9-4a06-b4c5-7415c88a0aa9"],
Cell[18354, 606, 968, 25, 34, "Input",ExpressionUUID->"e01cf5d1-be25-47be-9025-eecdbcd39985",
 CellTags->"NoLabel"],
Cell[19325, 633, 151, 3, 28, "Text",ExpressionUUID->"6dd55c46-4029-4e53-9f11-ad87e75ae748"],
Cell[CellGroupData[{
Cell[19501, 640, 300, 8, 32, "Input",ExpressionUUID->"8a842580-67d2-4959-a227-a626f727e6c0"],
Cell[19804, 650, 787, 13, 36, "Output",ExpressionUUID->"db42b531-9b2f-4fe6-88b4-a7be43dcb990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20628, 668, 408, 10, 32, "Input",ExpressionUUID->"03262c93-736d-4a55-8647-610ada53f7e2"],
Cell[21039, 680, 664, 11, 36, "Output",ExpressionUUID->"6903d96a-b177-408c-9c4d-10a29d737ae8"]
}, Open  ]]
}, Open  ]],
Cell[21730, 695, 9313, 199, 109, "SubmitRow",ExpressionUUID->"83e30bd8-e733-484e-ba4e-29b5f0682bb5"]
}
]
*)

